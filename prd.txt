# **📌 Product Requirements Document (PRD) – ReferralBoost MVP**  
🚀 **Version 1.0 | March 2025**  

## **1. Overview**
### **1.1 Product Name**  
**ReferralBoost** (Placeholder Name)  

### **1.2 Purpose & Goals**  
ReferralBoost is a **Django-based referral system** that allows **insurance agents to acquire high-quality leads at a lower cost by leveraging referrals from customers, car dealerships, mortgage brokers, and other business partners.**  

The **MVP focuses on:**  
✅ **Lead Capture via Referral Links & QR Codes** – Agents & partners share links with prospects.  
✅ **Automated Lead Routing** – Leads are assigned to the correct agent and sent to their CRM.  
✅ **Referral Reward Automation** – Business partners and referrers get paid when leads complete a quote.  
✅ **CRM-Friendly Design** – No forced CRM replacement, just a plug-and-play lead booster.  
✅ **No Business Partner Logins** – Simplified referral tracking without extra accounts or dashboards.  

### **1.3 Why This MVP?**  
✔ **Builds the core infrastructure** (lead intake, tracking, payouts, CRM integration).  
✔ **Generates immediate revenue** for agents and referrers.  
✔ **Lays the groundwork for future features** (automated renewals, lead marketplace).  

---

## **2. System Architecture**
### **2.1 Django Apps in Project**
✅ `referralsystem` (Core Referral Functionality)  
✅ `accounts` (User Authentication & Agent Management)  

### **2.2 Data Pipeline**
1️⃣ **Referral source (customer, dealership, etc.) shares a unique referral link or QR code.**  
2️⃣ **Lead enters basic info on a simple form (name, phone, email, insurance type).**  
3️⃣ **Lead is assigned to an agent and synced to their CRM (via Zapier API or direct webhook).**  
4️⃣ **Agent follows up with the lead and completes the insurance quote process.**  
5️⃣ **Referral system tracks the lead status and automates reward payments.**  
6️⃣ **Referrer gets paid (via Stripe, PayPal, or direct deposit).**  

---

## **3. Features & Functional Requirements**
### **3.1 Referral System (`referralsystem` app)**
| **Feature** | **Description** | **Priority** |
|------------|---------------|-------------|
| **Referral Link Generator** | Each agent & business partner gets a **unique, trackable referral link** (e.g., `insuranceapp.com/ref123`). | ✅ High |
| **QR Code Generator** | Each referral link generates a **QR code** for offline referrals (dealerships, brokers). | ✅ Medium |
| **Lead Capture Form** | A **simple form** where referred leads enter **name, phone, email, and insurance type**. | ✅ High |
| **Lead Assignment & CRM Sync** | New leads are **automatically assigned** to agents and sent via email/Zapier API. | ✅ High |
| **Automated Referral Rewards** | System tracks referrals and **automatically issues rewards** when a lead completes a quote. | ✅ High |
| **Fraud Prevention** | Checks for **duplicate leads & fake referrals** to prevent abuse. | ✅ Medium |

---

### **3.2 Accounts & Authentication (`accounts` app)**
| **Feature** | **Description** | **Priority** |
|------------|---------------|-------------|
| **User Registration/Login** | Agents can **sign up, log in, and manage accounts**. | ✅ High |
| **Business Partner Management (No Login Needed)** | Business partners (car salesmen, mortgage brokers) are given **a unique referral link & QR code**, but don’t require an account. | ✅ High |
| **Admin Dashboard** | Superusers can **manage referrals, agents, and payouts**. | ✅ High |

---

## **4. Data Model**
### **4.1 Referral System Models (`referralsystem` app)**
| **Model** | **Fields** | **Description** |
|---------|---------|----------------|
| `ReferralSource` | `id`, `name`, `type`, `email`, `phone`, `agent_assigned` | Stores **who made the referral** (customer, dealership, etc.). |
| `Referral` | `id`, `source`, `lead_name`, `lead_email`, `lead_phone`, `insurance_type`, `status`, `assigned_agent` | Tracks each **lead submitted via referral**. |
| `RewardPayout` | `id`, `referral`, `amount`, `payout_status`, `payment_method` | Logs **referral rewards & payout status**. |

---

### **4.2 User & Accounts Models (`accounts` app)**
| **Model** | **Fields** | **Description** |
|---------|---------|----------------|
| `UserProfile` | `id`, `user`, `role` (agent, partner, admin) | Extends Django's `User` model to include agent roles. |
| `AgentProfile` | `id`, `user`, `agency_name`, `crm_integration` | Stores agent details & CRM sync settings. |

---

## **5. API Endpoints**
### **5.1 Referral API (`referralsystem` app)**
| **Endpoint** | **Method** | **Functionality** |
|------------|---------|---------------|
| `/api/referrals/create/` | `POST` | Capture new referral lead. |
| `/api/referrals/{id}/assign/` | `POST` | Assign a lead to an agent. |
| `/api/referrals/{id}/status/` | `GET` | Get referral status. |
| `/api/rewards/process/` | `POST` | Trigger reward payout. |

---

## **6. Tech Stack**
✅ **Backend:** Django (Python), PostgreSQL  
✅ **Frontend:** Simple HTML/CSS (optional React for dashboard later)  
✅ **Auth:** Django Auth (OAuth2 for CRM integration)  
✅ **APIs:** Zapier API for CRM sync, Stripe/Plaid for payouts  

---

## **7. Compliance Considerations**
✅ **Referral rewards must be fixed & not depend on policy purchase.**  
✅ **Referral sources cannot discuss insurance policy details.**  
✅ **State-specific caps on referral amounts (e.g., $25 limit in some states).**  

---

## **8. Roadmap**
### **🚀 Phase 1 (4-6 Weeks)**
✅ Build **Referral System Backend** (tracking, API, payouts).  
✅ Create **Lead Capture Page** (basic form for leads).  
✅ Enable **Email & CRM Integration** (Zapier sync).  
✅ Develop **Agent Dashboard** (view leads & rewards).  

### **🚀 Phase 2 (Post-MVP)**
✅ Add **QR Code Generator** for offline referrals.  
✅ Implement **Admin Dashboard** for analytics.  
✅ Expand **Payment Options** (PayPal, ACH, Stripe).  
✅ Launch **Business Partner Referral Portal** (if needed).  

---

## **9. Next Steps**
1️⃣ Do you want **wireframes/mockups** for the agent dashboard & lead capture page?  
2️⃣ Should we **prioritize CRM sync first** so agents can use this immediately?  
3️⃣ Do you need a **development sprint breakdown** (who builds what & when)?  

🚀 **This PRD keeps the system lightweight, high-impact, and easy for salesmen, agents, and business partners to use—let’s build what actually gets adopted!**